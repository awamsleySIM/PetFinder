//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.09.13 at 02:56:27 PM EDT 
//


package com.systemsinmotion.petfinder.entities;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for petOptionType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="petOptionType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="specialNeeds"/>
 *     &lt;enumeration value="noDogs"/>
 *     &lt;enumeration value="noCats"/>
 *     &lt;enumeration value="noKids"/>
 *     &lt;enumeration value="noClaws"/>
 *     &lt;enumeration value="hasShots"/>
 *     &lt;enumeration value="housebroken"/>
 *     &lt;enumeration value="altered"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "petOptionType")
@XmlEnum
public enum PetOptionType {

    @XmlEnumValue("specialNeeds")
    SPECIAL_NEEDS("specialNeeds"),
    @XmlEnumValue("noDogs")
    NO_DOGS("noDogs"),
    @XmlEnumValue("noCats")
    NO_CATS("noCats"),
    @XmlEnumValue("noKids")
    NO_KIDS("noKids"),
    @XmlEnumValue("noClaws")
    NO_CLAWS("noClaws"),
    @XmlEnumValue("hasShots")
    HAS_SHOTS("hasShots"),
    @XmlEnumValue("housebroken")
    HOUSEBROKEN("housebroken"),
    @XmlEnumValue("altered")
    ALTERED("altered");
    private final String value;

    PetOptionType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PetOptionType fromValue(String v) {
        for (PetOptionType c: PetOptionType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
